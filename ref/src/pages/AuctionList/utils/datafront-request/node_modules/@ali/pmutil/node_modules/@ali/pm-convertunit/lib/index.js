var isArray = Array.isArray || function(obj) {
  return toString.call(obj) == '[object Array]';
};

var isBoolean = function(value) {
  return typeof value === 'boolean';
};

Array.prototype.indexOf || (Array.prototype.indexOf = function(item) { // eslint-disable-line
  var i, l;
  for (i = 0, l = this.length; i < l; i++) if (i in this && this[i] === item) return i;
  return -1;
});

/**
 * 转化单位
 * @param num
 * @param formatFlag: 设置成true,就是格式化, 默认是false。请不要用0，1来代替boolean类型数据
 * @param includeUnit: 默认包含的单位是万，亿， 如果额外补充的单位：目前只增加了千万.
 * @param excludeUnit: 默认包含的单位是万，亿, 如果想去除这两个单位，可以设置在这个属性里面。
 * @returns {string}
 */
module.exports = function convertUnit(num, formatFlag, includeUnit, excludeUnit) {
  if (!num) return '';
  var num = num + '', unit = 1; // eslint-disable-line
  //去掉空格
  num = num.replace(/\s+/g, '');
  //去掉,
  num = num.replace(/,/g, '');
  //去掉无效字符
  num = _deleteZero(num);
  //分析参数
  var _formatFlag = false, _includeUnit = [], _excludeUnit = [];
  if (arguments.length === 4) {
    _formatFlag = isBoolean(formatFlag) ? formatFlag : false;
    isArray(includeUnit) && (_includeUnit = includeUnit);
    isArray(excludeUnit) && (_excludeUnit = excludeUnit);
  } else if (arguments.length === 3) {
    if (isBoolean(formatFlag)) {
      _formatFlag = formatFlag;
      if (isArray(includeUnit)) {
        _includeUnit = includeUnit;
      }
    } else {
      if (isArray(formatFlag)) {
        _includeUnit = formatFlag;
      }
      if (isArray(includeUnit)) {
        _excludeUnit = includeUnit;
      }
    }
  } else if (arguments.length === 2) {
    if (isBoolean(formatFlag)) {
      _formatFlag = formatFlag;
    }
    if (isArray(formatFlag)) {
      _includeUnit = formatFlag;
    }
  }
  //有万单位
  if (num.indexOf('万') > 0) {
    unit = 1e4;
    num = num.replace('万', '');
    var arr = num.split('.');
    if (arr.length === 2) {
      arr[1] = arr[1] + '0000';
      arr[1] = arr[1].substring(0, 4);
    } else {
      arr[1] = '0000';
    }
    num = arr[0] + arr[1];
    return num;
  }
  //有千万单位
  if (num.indexOf('千万') > 0) {
    unit = 1e7;
    num = num.replace('千万', '');
    var arr = num.split('.');
    if (arr.length === 2) {
      arr[1] = arr[1] + '0000000';
      arr[1] = arr[1].substring(0, 7);
    } else {
      arr[1] = '0000000';
    }
    num = arr[0] + arr[1];
    return num;
  }
  //有亿单位
  if (num.indexOf('亿') > 0) {
    unit = 1e8;
    num = num.replace('亿', '');
    var arr = num.split('.');
    if (arr.length === 2) {
      arr[1] = arr[1] + '00000000';
      arr[1] = arr[1].substring(0, 8);
    } else {
      arr[1] = '00000000';
    }
    num = arr[0] + arr[1];
    return num;
  }
  //没有单位
  if (_isPureNumber(num)) {
    var arr = num.split('.'), baseScale = 1, afterDotLength = 0;
    if (arr.length === 2) {
      num = num.replace('.', '');
      baseScale = Math.pow(10, arr[1].length);
      afterDotLength = arr[1].length;

      //对于小于10000，并且有小数点的数值；
      if (arr[0].length <= 4) {
        if (_formatFlag) {
          return '<span class="integer">' + arr[0] + '</span>' + '<span class="dot">.</span>' + '<span class="float">' + arr[1] + '</span>';
        } else {
          return arr[0] + '.' + arr[1];
        }
      }
    }
    if (num.length > 8 + afterDotLength && _excludeUnit.indexOf('亿') === -1) {
      //上亿了
      num = num / (1e8 * baseScale) + '';
      if (_formatFlag) {
        var arr = num.split('.');
        arr[0] && (arr[0] = '<span class="integer">' + arr[0] + '</span>');
        arr[1] && (arr[1] = '<span class="float">' + arr[1] + '</span>');
        num = arr[0] + (arr[1] ? '<span class="dot">.</span>' + arr[1] : '') + '<span class="unit">亿</span>';
        return num;
      }
      return num + '亿';
    }
    if (num.length > 7 + afterDotLength && _includeUnit.indexOf('千万') >= 0) {
      //上千万
      num = num / (1e7 * baseScale) + '';
      if (_formatFlag) {
        var arr = num.split('.');
        arr[0] && (arr[0] = '<span class="integer">' + arr[0] + '</span>');
        arr[1] && (arr[1] = '<span class="float">' + arr[1] + '</span>');
        num = arr[0] + (arr[1] ? '<span class="dot">.</span>' + arr[1] : '') + '<span class="unit">千万</span>';
        return num;
      }
      return num + '千万';
    }
    if (num.length > 4 + afterDotLength && _excludeUnit.indexOf('万') === -1) {
      //上万了
      num = num / (1e4 * baseScale) + '';
      if (_formatFlag) {
        var arr = num.split('.');
        arr[0] && (arr[0] = '<span class="integer">' + arr[0] + '</span>');
        arr[1] && (arr[1] = '<span class="float">' + arr[1] + '</span>');
        num = arr[0] + (arr[1] ? '<span class="dot">.</span>' + arr[1] : '') + '<span class="unit">万</span>';
        return num;
      }
      return num + '万';
    }
    return num;
  }
  return num;
};

/**
 * 删除价格字符串中无效的元素：
 * 1.去掉小数点后的0
 * 2.去掉价格单位之外的汉字
 * 3.提取有效价格
 * @param value
 * @returns {*}
 *
 */
function _deleteZero(value) {
  var arr = /([\d]+)(\.[\d]+)?/.exec(value);
  if (!arr || !arr[0]) return;
  var unit = value[arr[0].length] ? value[arr[0].length] : '';
  if (unit !== '万' && unit !== '千万' && unit !== '亿') unit = '';
  if (arr[2]) {
    var floatNum = arr[2];
    for (var _length = floatNum.length, i = _length - 1; i > 0; i--) {
      if (floatNum[i] !== '0') break;
      floatNum = floatNum.slice(0, i);
    }
    arr[2] = floatNum;
  } else {
    arr[2] = '';
  }
  return arr[1] + arr[2] + unit;
}

/**
 * 判断是否是纯数值
 * @param value
 * @returns {boolean}
 * @private
 */
function _isPureNumber(value) {
  var numberReg = /(^[\d]+[\\.][~\\.\d]+$)|^\d+$/;
  return numberReg.test(value);
}
