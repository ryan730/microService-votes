import SPM from '@ali/universal-spm';

const REGX = /^([^?]+)(\?[^#]+)?(#.*)?/;

const MAX_PATH_DEPTH = 20;

const random = n => Math.random().toString().substr(2, n);

const PVID = random(10) + '_' + (+new Date);

const SEARCH_PARAMS = new URLSearchParams(location.search);

const getScm = ({ spmc = '0', spmd = '0', ab = '0', crowd = '0', cs = '0' }) => `20140647.${crowd}.${cs}.${ab}.${SPM.getPageSPM()[1]}.${spmc}.${spmd}`;

const getPath = ({ path }) => {
  const spmbs = path ? path.split(',') : [];
  const spmb = SPM.getPageSPM()[1];
  const idx = spmbs.indexOf(spmb);

  if (idx > -1) {
    spmbs.length = idx + 1;
  } else {
    spmbs.push(spmb);
  }

  spmbs.length = Math.min(spmbs.length, MAX_PATH_DEPTH);

  return spmbs.join(',');
};

const getForceScm = ({ scm = '', crowd = '0', cs = '0', ab = '0' }) => {
  const [prefix, , , , spmb, spmc, spmd] = scm.split('.');
  return `${prefix}.${crowd}.${cs}.${ab}.${spmb}.${spmc}.${spmd}`;
};

const createTrackParams = ({ spmc, spmd, crowd, cs, ab, canBeOrigin = true, forceUpdateScm = false } = {}) => {
  let pvid = SEARCH_PARAMS.get('pvid');
  let scm = SEARCH_PARAMS.get('scm');
  let path = SEARCH_PARAMS.get('path');

  path = getPath({ path });

  if (pvid && scm) {
    if (forceUpdateScm) {
      scm = getForceScm({ scm, crowd, cs, ab });
    }
    return { pvid, scm, path };
  }

  if (canBeOrigin) {
    return {
      pvid: PVID,
      scm: getScm({ spmc, spmd, crowd, cs, ab }),
      path,
    };
  }

  return {};
};

const createTrackSearch = opts => {
  const params = createTrackParams(opts);
  const pairs = [];

  for (const key in params) {
    if (params.hasOwnProperty(key)) {
      pairs.push(`${key}=${params[key]}`);
    }
  }

  return pairs.join('&');
};

const createTrackUrl = ({ url, spmc, spmd, crowd, cs, ab, forceUpdateScm = false }) => {
  if (!url) return url;

  const r = REGX.exec(url);

  if (!r) return url;

  const [, hrefNoSearch = '', search = '', hash = ''] = r;

  const searchParams = new URLSearchParams(search);
  let urlPvid = searchParams.get('pvid');
  let urlScm = searchParams.get('scm');
  let locationPvid = SEARCH_PARAMS.get('pvid');
  let locationScm = SEARCH_PARAMS.get('scm');
  let locationOldScm = SEARCH_PARAMS.get('oldscm');
  let locationPath = SEARCH_PARAMS.get('path');

  if (!urlPvid) {
    const pvid = locationPvid || PVID;
    searchParams.set('pvid', pvid);
  }

  if (locationScm && forceUpdateScm) {
    locationScm = getForceScm({ scm: locationScm, crowd, cs, ab });
  }

  if (locationPvid && locationScm) {
    searchParams.set('scm', locationScm);
    const oldscm = locationOldScm || urlScm;
    if (oldscm) searchParams.set('oldscm', oldscm);
  } else {
    searchParams.set('scm', getScm({ spmc, spmd, crowd, cs, ab }));
    const oldscm = locationScm || locationOldScm || urlScm;
    if (oldscm) searchParams.set('oldscm', oldscm);
  }

  const path = getPath({ path: locationPath });
  searchParams.set('path', path);

  return `${hrefNoSearch}?${searchParams.toString()}${hash}`;
};

const createTrackUrlWithSpm = ({ url, spmc, spmd, crowd, cs, ab, forceUpdateScm = false }) => {
  return `${createTrackUrl({ url, spmc, spmd, crowd, cs, ab, forceUpdateScm })}&${SPM.getSPMQueryString(spmc, spmd)}`;
};

export default { createTrackParams, createTrackSearch, createTrackUrl, createTrackUrlWithSpm };
